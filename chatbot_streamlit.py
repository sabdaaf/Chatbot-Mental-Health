# -*- coding: utf-8 -*-
"""chatbot-streamlit.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1osf8kHumSHowz1KHh26D33TTzv9-gcUQ
"""

import streamlit as st
import json
import numpy as np
import tensorflow as tf
from sklearn.preprocessing import LabelEncoder
from transformers import BertTokenizer

file = open('intents.json', 'r')
data = json.load(file)
file.close()

patterns = []
responses = []
labels = []

for intent in data["intents"]:
    if "patterns" in intent and "responses" in intent:
        for pattern in intent["patterns"]:
            patterns.append(pattern)
            responses.append(np.random.choice(intent["responses"]))
        labels.extend([intent["tag"]] * len(intent["patterns"]))

label_encoder = LabelEncoder()
labels_encoded = label_encoder.fit_transform(labels)

tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')
max_length = 30
input_ids = []
attention_masks = []

for pattern in patterns:
    encoded = tokenizer.encode_plus(pattern, add_special_tokens=True, max_length=max_length, padding='max_length', truncation=True, return_attention_mask=True)
    input_ids.append(encoded['input_ids'])
    attention_masks.append(encoded['attention_mask'])

input_ids = np.array(input_ids)
attention_masks = np.array(attention_masks)
labels_encoded = np.array(labels_encoded)

model = tf.keras.models.load_model('best_model.keras')

st.title("Chatbot")
st.write("Talk to the chatbot!")

user_input = st.text_input("You: ")

if st.button("Send"):
    encoded_input = tokenizer.encode_plus(user_input, add_special_tokens=True, max_length=max_length, padding='max_length', truncation=True, return_attention_mask=True)
    input_ids = np.array(encoded_input['input_ids']).reshape(1, -1)
    attention_mask = np.array(encoded_input['attention_mask']).reshape(1, -1)
    prediction = model.predict(input_ids)
    intent_index = np.argmax(prediction)
    predicted_intent = label_encoder.inverse_transform([intent_index])[0]
    response = np.random.choice([resp for resp, lbl in zip(responses, labels) if lbl == predicted_intent])
    st.write("Bot:", response)